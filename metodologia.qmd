---
title: Metodología
lang: es
execute: 
  freeze: auto
---

::: {style="text-align: justify"}
En esta sección se describe el enfoque metodológico utilizado para evaluar la efectividad de una PINN utilizando una arquitectura DeepONet con el objetivo de resolver la ecuacion del Bio-Calor. El proceso metodológico se divide en las siguientes etapas:

## Aportaciones del modelo
Ya que se parte del trabajo de @medical_rep, se examinó que dos de los puntos a mejorar de la red neuronal que plantearon son:

1. Desarrollar nuevas arquitecturas para la red neuronal y explorar nuevas configuraciones.
2. Combinar las fortalezas de los algoritmos de optimización Adam y L-BFGS [@sec-optimizadores] para mejorar la velocidad de convergencia y la precisión.

Teniendo los anteriores puntos en cuenta, se procedió a abordarlos e implementarlos dentro del diseño del modelo.

## Diseño del modelo
El lenguaje seleccionado fué Python, a su vez el código se basa enteramente en la librería Deepxde creada por @deepxde la cual está directamente enfocada a resolver ecuaciones diferenciales, se usó además como backend *tensorflow_compat_v1* siendo su elección debida únicamente a la familiarización previa que se tenía con ella. Finalmente el entorno donde se programó y optimizó el código fué en *Google Colab* ya que la potencia de cómputo ofrecida por la plataforma era necesaria para ejecutar el modelo. 

## Implementación del modelo
La implementación del modelo se llevó a cabo en dos etapas clave: **(1) el desarrollo del código base para resolver la ecuación del Bio-Calor mediante DeepXDE**, y **(2) la optimización sistemática de los hiperparámetros**. Para esta última, se siguieron las recomendaciones del estudio de @medical_rep, adaptadas a las particularidades del problema. Se ajustaron parámetros críticos como el número de épocas de entrenamiento (*iterations*), la tasa de aprendizaje (*learning rate*) así como un decaimiento en el mismo dependiente de la iteración actual (*decay*), la función de activación (*elu*) y el esquema de inicialización de pesos (*Glorot normal*). Estos ajustes se realizaron mediante un proceso iterativo que buscaba minimizar la función de pérdida mientras se mantenía un tiempo de entrenamiento computacionalmente viable.

## Evaluación del modelo
Para validar el desempeño del modelo propuesto, se realizó una evaluación exhaustiva utilizando un *conjunto de datos independiente*, el cual no fue empleado durante las fases de entrenamiento o ajuste de hiperparámetros. Este enfoque garantiza una medición objetiva de la capacidad de generalización del modelo ante datos no vistos.

Las predicciones generadas por el modelo fueron analizadas mediante visualizaciones espaciotemporales, las cuales permiten comparar cualitativamente el comportamiento de las soluciones pronosticadas frente a los rangos físicos y temporales definidos en el problema. En particular, se generaron gráficas de superficies 3D que muestran la evolución de las variables de interés a lo largo del dominio espacial y temporal bajo estudio. Adicionalmente, se incluyeron representaciones de cortes transversales y series temporales en puntos estratégicos para facilitar la interpretación de los resultados.

Cabe destacar que este análisis preliminar se centró en examinar la coherencia física y la estabilidad numérica de las predicciones. Para la evaluación cuantitativa del modelo, se implementó una comparación directa con las soluciones obtenidas mediante el método numérico de **Crank-Nicolson**, resuelto en *Julia* utilizando la librería *DifferentialEquations.jl*.

## Comparación de resultados
Para evaluar el desempeño predictivo del modelo propuesto, se realizaron dos tipos de comparaciones:

1. Una evaluación cualitativa basada en visualizaciones.
2. Un análisis cuantitativo mediante métricas de error estandarizadas.

En primer lugar, se llevó a cabo una comparación visual con los resultados reportados en el trabajo de @medical_rep, dado que dicho estudio no incluye datos numéricos tabulados, sino únicamente representaciones gráficas de las soluciones. Esta comparación permitió identificar coincidencias y discrepancias en el comportamiento espaciotemporal de las variables de interés, destacando las fortalezas del modelo propuesto en términos de estabilidad numérica.

En segundo lugar, para una evaluación cuantitativa rigurosa, se compararon las predicciones del modelo con soluciones de referencia generadas mediante el método de Crank-Nicolson, implementado en Julia utilizando la librería DifferentialEquations.jl. La comparación se realizó sobre una malla uniforme de 26×26 puntos en el cuadrado de $[0,1]\times[0,1]$, calculando para cada instante de tiempo relevante las siguientes métricas:

- Error Absoluto Medio (MAE).
- Error Absoluto Máximo (MaxAE).
- Error L2 (norma euclidiana).

Estos criterios permitieron cuantificar no solo la precisión global del modelo, sino también sus desviaciones locales más significativas, particularmente en regiones con alta variabilidad espacial. Los resultados detallados de este análisis, junto con una discusión sobre la eficiencia computacional relativa entre ambos métodos, se presentan en la @tbl-errores.

## Análisis y conclusión
Finalmente, se realizó un análisis detallado de los resultados obtenidos para extraer conclusiones significativas. Se proporcionaron recomendaciones basadas en los hallazgos del estudio, lo que permitió establecer un marco para interpretaciones analíticas profundas y recomendaciones bien fundamentadas en la sección de conclusiones del estudio.

Este enfoque metodológico proporcionó una base sólida para los resultados obtenidos, asegurando la integridad y la calidad del análisis realizado en el estudio.
:::